# DEVELOPMENT CONFIGURATION
version: "3.9"
services:
  db:
    image: postgres:12
    environment:
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB}'
    ports:
      - '${DB_PORT}:${DB_PORT}'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB}"]
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - db-data:/var/lib/postgresql/data:delegated
      - ./db/__init__.sql:/docker-entrypoint-initdb.d/init.sql
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    env_file:
      - ./.env
    ports:
      - '${REST_API_PORT}:${REST_API_PORT}'
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
    command: yarn dev-api
    volumes:
      - .:/usr/src/app

  ws:
    build:
      context: .
      dockerfile: Dockerfile.ws
    env_file:
      - ./.env
    ports:
      - '${WEBSOCKET_PORT}:${WEBSOCKET_PORT}'
    depends_on:
      db:
        condition: service_healthy
    environment:
      NODE_ENV: development
    command: yarn dev-ws
    volumes:
      - .:/usr/src/app

volumes:
  db-data:
